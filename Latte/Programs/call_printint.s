
.extern _printInt
.extern _printString
.extern _readString
.extern _readInt
.extern _error
.extern _concatStrings
.extern _compareStrings
.intel_syntax
.global _main
str0:
.string ""
str1:
.string "="
str2:
.string "hello */"
str3:
.string "/* world"
_main:
PUSH RBP
MOV RBP, RSP
SUB RSP, 120
PUSH 0
MOV RDI, 10
CALL _fac
ADD RSP, 8
MOV [RBP-8], RAX
PUSH 0
MOV RAX, [RBP-8]
MOV RDI, RAX
CALL _printInt
ADD RSP, 8
PUSH 0
MOV RDI, 10
CALL _rfac
ADD RSP, 8
MOV [RBP-16], RAX
PUSH 0
MOV RAX, [RBP-16]
MOV RDI, RAX
CALL _printInt
ADD RSP, 8
PUSH 0
MOV RDI, 10
CALL _mfac
ADD RSP, 8
MOV [RBP-24], RAX
PUSH 0
MOV RAX, [RBP-24]
MOV RDI, RAX
CALL _printInt
ADD RSP, 8
PUSH 0
MOV RDI, 10
CALL _ifac
ADD RSP, 8
MOV [RBP-32], RAX
PUSH 0
MOV RAX, [RBP-32]
MOV RDI, RAX
CALL _printInt
ADD RSP, 8
LEA RAX, str0[RIP]
MOV [RBP-40], RAX
MOV QWORD PTR [RBP-105], 10
MOV QWORD PTR [RBP-81], 1
l0:
MOV RAX, [RBP-105]
CMP RAX, 0
SETG [RBP-57]
MOVZX RAX, BYTE PTR [RBP-57]
TEST RAX, RAX
JE l2
MOV RAX, [RBP-81]
MOV RDI, [RBP-105]
IMUL RAX, RDI
MOV [RBP-81], RAX
DEC QWORD PTR [RBP-105]
JMP l0
l2:
PUSH 0
MOV RAX, [RBP-81]
MOV RDI, RAX
CALL _printInt
ADD RSP, 8
PUSH 0
LEA RDI, str1[RIP]
MOV RSI, 60
CALL _repStr
ADD RSP, 8
MOV [RBP-113], RAX
PUSH 0
MOV RAX, [RBP-113]
MOV RDI, RAX
CALL _printString
ADD RSP, 8
PUSH 0
LEA RDI, str2[RIP]
CALL _printString
ADD RSP, 8
PUSH 0
LEA RDI, str3[RIP]
CALL _printString
ADD RSP, 8
MOV RAX, 0
MOV RSP, RBP
POP RBP
RET
_fac:
PUSH RBP
MOV RBP, RSP
MOV [RBP-8], RDI
SUB RSP, 120
MOV QWORD PTR [RBP-113], 0
MOV RAX, [RBP-113]
MOV [RBP-105], RAX
MOV QWORD PTR [RBP-113], 1
MOV RAX, [RBP-56]
MOV [RBP-105], RAX
l4:
MOV RAX, [RBP-105]
CMP RAX, 0
SETG [RBP-57]
MOVZX RAX, BYTE PTR [RBP-57]
TEST RAX, RAX
JE l6
MOV RAX, [RBP-113]
MOV RDI, [RBP-105]
IMUL RAX, RDI
MOV [RBP-113], RAX
MOV RAX, [RBP-105]
SUB RAX, 1
MOV [RBP-105], RAX
JMP l4
l6:
MOV RAX, [RBP-113]
MOV RSP, RBP
POP RBP
RET
_rfac:
PUSH RBP
MOV RBP, RSP
MOV [RBP-8], RDI
SUB RSP, 72
MOV RAX, [RBP-49]
CMP RAX, 0
SETE [RBP-9]
MOVZX RAX, BYTE PTR [RBP-9]
TEST RAX, RAX
JE l9
MOV RAX, 1
MOV RSP, RBP
POP RBP
RET
JMP l10
l9:
MOV RAX, [RBP-49]
SUB RAX, 1
MOV [RBP-17], RAX
PUSH 0
MOV RAX, [RBP-17]
MOV RDI, RAX
CALL _rfac
ADD RSP, 8
MOV [RBP-57], RAX
MOV RAX, [RBP-49]
MOV RDI, [RBP-57]
IMUL RAX, RDI
MOV [RBP-65], RAX
MOV RAX, [RBP-65]
MOV RSP, RBP
POP RBP
RET
l10:
MOV RSP, RBP
POP RBP
RET
_mfac:
PUSH RBP
MOV RBP, RSP
MOV [RBP-8], RDI
SUB RSP, 72
MOV RAX, [RBP-49]
CMP RAX, 0
SETE [RBP-9]
MOVZX RAX, BYTE PTR [RBP-9]
TEST RAX, RAX
JE l12
MOV RAX, 1
MOV RSP, RBP
POP RBP
RET
JMP l13
l12:
MOV RAX, [RBP-49]
SUB RAX, 1
MOV [RBP-17], RAX
PUSH 0
MOV RAX, [RBP-17]
MOV RDI, RAX
CALL _nfac
ADD RSP, 8
MOV [RBP-57], RAX
MOV RAX, [RBP-49]
MOV RDI, [RBP-57]
IMUL RAX, RDI
MOV [RBP-65], RAX
MOV RAX, [RBP-65]
MOV RSP, RBP
POP RBP
RET
l13:
MOV RSP, RBP
POP RBP
RET
_nfac:
PUSH RBP
MOV RBP, RSP
MOV [RBP-8], RDI
SUB RSP, 72
MOV RAX, [RBP-57]
CMP RAX, 0
SETNE [RBP-9]
MOVZX RAX, BYTE PTR [RBP-9]
TEST RAX, RAX
JE l15
MOV RAX, [RBP-57]
SUB RAX, 1
MOV [RBP-17], RAX
PUSH 0
MOV RAX, [RBP-17]
MOV RDI, RAX
CALL _mfac
ADD RSP, 8
MOV [RBP-49], RAX
MOV RAX, [RBP-49]
MOV RDI, [RBP-57]
IMUL RAX, RDI
MOV [RBP-65], RAX
MOV RAX, [RBP-65]
MOV RSP, RBP
POP RBP
RET
JMP l16
l15:
MOV RAX, 1
MOV RSP, RBP
POP RBP
RET
l16:
MOV RSP, RBP
POP RBP
RET
_ifac:
PUSH RBP
MOV RBP, RSP
MOV [RBP-8], RDI
SUB RSP, 24
PUSH 0
MOV RDI, 1
MOV RAX, [RBP-8]
MOV RSI, RAX
CALL _ifac2f
ADD RSP, 8
MOV [RBP-24], RAX
MOV RAX, [RBP-24]
MOV RSP, RBP
POP RBP
RET
_ifac2f:
PUSH RBP
MOV RBP, RSP
MOV [RBP-8], RDI
MOV [RBP-16], RSI
SUB RSP, 144
MOV RDI, [RBP-50]
MOV RSI, [RBP-58]
CMP RDI, RSI
SETE [RBP-17]
MOVZX RAX, BYTE PTR [RBP-17]
TEST RAX, RAX
JE l18
MOV RAX, [RBP-50]
MOV RSP, RBP
POP RBP
RET
l18:
MOV RAX, [RBP-50]
MOV RDI, [RBP-58]
CMP RAX, RDI
SETG [RBP-26]
MOVZX RAX, BYTE PTR [RBP-26]
TEST RAX, RAX
JE l20
MOV RAX, 1
MOV RSP, RBP
POP RBP
RET
l20:
MOV QWORD PTR [RBP-98], 0
MOV RAX, [RBP-50]
MOV RDI, [RBP-58]
ADD RAX, RDI
MOV [RBP-74], RAX
MOV RAX, [RBP-74]
MOV RDI, 2
MOV RAX, RAX
CQO 
IDIV RDI
MOV [RBP-98], RAX
MOV RAX, [RBP-50]
MOV RDI, RAX
MOV RAX, [RBP-98]
MOV RSI, RAX
CALL _ifac2f
MOV [RBP-122], RAX
MOV RAX, [RBP-98]
ADD RAX, 1
MOV [RBP-90], RAX
MOV RAX, [RBP-90]
MOV RDI, RAX
MOV RAX, [RBP-58]
MOV RSI, RAX
CALL _ifac2f
MOV [RBP-130], RAX
MOV RAX, [RBP-122]
MOV RDI, [RBP-130]
IMUL RAX, RDI
MOV [RBP-138], RAX
MOV RAX, [RBP-138]
MOV RSP, RBP
POP RBP
RET
_repStr:
PUSH RBP
MOV RBP, RSP
MOV [RBP-8], RDI
MOV [RBP-16], RSI
SUB RSP, 96
LEA RAX, str0[RIP]
MOV [RBP-89], RAX
MOV QWORD PTR [RBP-81], 0
l21:
MOV RAX, [RBP-81]
MOV RDI, [RBP-16]
CMP RAX, RDI
SETL [RBP-33]
MOVZX RAX, BYTE PTR [RBP-33]
TEST RAX, RAX
JE l23
MOV RDI, [RBP-89]
MOV RSI, [RBP-65]
CALL _concatStrings
MOV [RBP-89], RAX
INC QWORD PTR [RBP-81]
JMP l21
l23:
MOV RAX, [RBP-89]
MOV RSP, RBP
POP RBP
RET
