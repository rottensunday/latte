
.extern _printInt
.extern _printString
.extern _readString
.extern _readInt
.extern _error
.extern _concatStrings
.extern _compareStrings
.intel_syntax
.global _main
str0:
.string "haha"
str1:
.string "uuu"
str2:
.string "XDDD"
_main:
PUSH RBP
MOV RBP, RSP
PUSH R15
PUSH R14
PUSH R13
PUSH R12
PUSH RBX
SUB RSP, 16
MOV RDI, 32
CALL _malloc
MOV R15, RAX
LEA R14, [R15+8]
MOV QWORD PTR [R14], 15
LEA R13, [R15]
MOV QWORD PTR [R13], 23
MOV RDI, 32
CALL _malloc
LEA R12, [R15+24]
MOV [R12], RAX
MOV RBX, [R15+24]
LEA RBX, [RBX]
MOV QWORD PTR [RBX], 11
MOV RDX, [R15+24]
LEA RDX, [RDX+8]
MOV QWORD PTR [RDX], 333
PUSH RDX
PUSH 0
MOV RAX, [R15]
PUSH RAX
POP RDI
CALL _printInt
ADD RSP, 8
POP RDX
PUSH RDX
PUSH 0
MOV RAX, [R15+8]
PUSH RAX
POP RDI
CALL _printInt
ADD RSP, 8
POP RDX
PUSH RDX
PUSH 0
MOV RAX, [R15+24]
MOV RAX, [RAX]
PUSH RAX
POP RDI
CALL _printInt
ADD RSP, 8
POP RDX
PUSH RDX
PUSH RSI
PUSH 0
MOV RAX, [R15+24]
PUSH RAX
POP RDI
CALL _testfun1
ADD RSP, 8
POP RSI
POP RDX
MOV RSI, RAX
PUSH RDX
PUSH RSI
PUSH 0
PUSH RSI
POP RDI
CALL _printInt
ADD RSP, 8
POP RSI
POP RDX
LEA R11, [R15+16]
LEA RAX, str0[RIP]
MOV [R11], RAX
PUSH RSI
MOV RDI, [R15+16]
LEA RSI, str1[RIP]
CALL _concatStrings
MOV R10, RAX
POP RSI
PUSH RDX
PUSH RSI
PUSH R11
PUSH R10
PUSH 0
PUSH R10
POP RDI
CALL _printString
ADD RSP, 8
POP R10
POP R11
POP RSI
POP RDX
PUSH RSI
MOV RDI, [R15+16]
LEA RSI, str2[RIP]
CALL _concatStrings
MOV R9, RAX
POP RSI
LEA RAX, [R15+16]
MOV [RAX], R9
MOV R9, RAX
PUSH RDX
PUSH RSI
PUSH R11
PUSH R10
PUSH R9
PUSH 0
MOV RAX, [R15+16]
PUSH RAX
POP RDI
CALL _printString
ADD RSP, 8
POP R9
POP R10
POP R11
POP RSI
POP RDX
MOV RDI, 16
CALL _malloc
MOV R8, RAX
LEA RCX, [R8]
MOV QWORD PTR [RCX], 1
LEA RDI, [R8+8]
MOV QWORD PTR [RDI], 0
MOV [RBP-56], R8
MOV [RBP-48], R15
MOV RAX, [RBP-56]
MOV RAX, [RAX]
TEST RAX, RAX
JNE l2
MOV RAX, [RBP-56]
MOV RAX, [RAX+8]
TEST RAX, RAX
JNE l2
JMP l3
l2:
PUSH 1
JMP l4
l3:
PUSH 0
l4:
MOV RAX, [RBP-64]
TEST RAX, RAX
JE l1
PUSH 122
POP RDI
CALL _printInt
MOV R15, [RBP-48]
LEA RAX, [R15+8]
INC QWORD PTR [RAX]
MOV RAX, [R15+8]
PUSH RAX
POP RDI
CALL _printInt
MOV R13, [RBP-48]
MOV R12, [R13+8]
MOV RAX, [R15]
ADD R12, RAX
PUSH R12
POP RDI
CALL _printInt
PUSH R13
POP RDI
CALL _testfun1
MOV RBX, RAX
LEA RAX, [R13]
MOV [RAX], RBX
MOV RBX, RAX
MOV RAX, [R13]
PUSH RAX
POP RDI
CALL _printInt
l1:
MOV RAX, 0
ADD RSP, 24
POP RBX
POP R12
POP R13
POP R14
POP R15
MOV RSP, RBP
POP RBP
RET
_testfun1:
PUSH RBP
MOV RBP, RSP
PUSH R15
MOV [RBP-16], RDI
SUB RSP, 8
MOV R15, [RBP-16]
MOV RAX, [R15+8]
PUSH RAX
POP RDI
CALL _printInt
MOV RAX, [R15]
ADD RSP, 8
POP R15
MOV RSP, RBP
POP RBP
RET
